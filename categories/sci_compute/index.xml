<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Scientific Computing on Haoming Wang</title>
        <link>https://wanghaoming177.netlify.app/categories/sci_compute/</link>
        <description>Recent content in Scientific Computing on Haoming Wang</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Wed, 12 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://wanghaoming177.netlify.app/categories/sci_compute/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>MATLAB in Engineering I (Array Operations)</title>
        <link>https://wanghaoming177.netlify.app/p/matlab-in-engineering-i-array-operations/</link>
        <pubDate>Wed, 12 May 2021 00:00:00 +0000</pubDate>
        
        <guid>https://wanghaoming177.netlify.app/p/matlab-in-engineering-i-array-operations/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;All figures in this blog are embedded by Github Image Hosting Service. These figures may not be displayed on mobile devices.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;
&lt;h2 id=&#34;operation-interface&#34;&gt;Operation interface&lt;/h2&gt;
&lt;p&gt;The operator interface of MATLAB consists of the following parts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Current folder&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Command line window&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Workspace&lt;/code&gt;: storing variables&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Command history&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/floating15/img/main/202205101713260.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;variable&#34;&gt;Variable&lt;/h2&gt;
&lt;h3 id=&#34;variable-name&#34;&gt;Variable name&lt;/h3&gt;
&lt;p&gt;Variables in MATLAB do not need to be declared, they are assigned directly using &lt;code&gt;=&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-matlab&#34; data-lang=&#34;matlab&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;b =

    10
a =

     5
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Like most programming languages, variable names in MATLAB are case-sensitive. Variable names can only be composed of &lt;code&gt;0~9&lt;/code&gt;, &lt;code&gt;a~z&lt;/code&gt;, &lt;code&gt;A~z&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt;, and variable names cannot start with a number. Some variables in MATLAB have specific meaning and are not suitable to be used as variable names.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ans&lt;/code&gt;:   outcome of the last command&lt;/li&gt;
&lt;li&gt;&lt;code&gt;i&lt;/code&gt;, &lt;code&gt;j&lt;/code&gt;:   complex number&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Inf&lt;/code&gt;:   ∞&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eps&lt;/code&gt;:   2.2204e-16&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NaN&lt;/code&gt;:   not a number&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pi&lt;/code&gt;:    π&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In addition, the &lt;code&gt;iskeyword&lt;/code&gt; command allows you to view all keywords in the MATLAB language, which are also not allowed to be used as variable names. In MATLAB, the &lt;strong&gt;calling priority of variables is higher than that of functions&lt;/strong&gt;, so variable names should not override built-in functions.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/floating15/img/main/202205101738455.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-matlab&#34; data-lang=&#34;matlab&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;This string.&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c&#34;&gt;% Index the string and get &amp;#39;r&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ans =

    &#39;r&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If a function is overridden by a variable name, call &lt;code&gt;clear &amp;lt;variable name&amp;gt;&lt;/code&gt; to unbind the variable name to that function name.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-matlab&#34; data-lang=&#34;matlab&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;clear&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cos&lt;/span&gt; &lt;span class=&#34;c&#34;&gt;% clear the variables bound to cos&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;    &lt;span class=&#34;c&#34;&gt;% call the built-in cosine function to get -0.1455&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ans =

   -0.1455
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;clear&lt;/code&gt; is a dangerous command, because it clears &lt;strong&gt;all&lt;/strong&gt; variables in the current workspace if it is not followed by an argument.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;type-and-format&#34;&gt;type and format&lt;/h3&gt;
&lt;p&gt;The types of variables in MATLAB are: &lt;code&gt;logical&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;, &lt;code&gt;numeric&lt;/code&gt;, &lt;code&gt;cell&lt;/code&gt;, &lt;code&gt;struct&lt;/code&gt; and arrays or matrices composed of them.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/floating15/img/main/202205101741822.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;The numeric variables we define directly are stored as &lt;code&gt;double&lt;/code&gt; by default. We can check out the type of variable by &lt;code&gt;whos&lt;/code&gt; command.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-matlab&#34; data-lang=&#34;matlab&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;1.1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;pi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;whos&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Name      Size            Bytes  Class     Attributes

a         1x1                 8  double              
ans       1x1                 8  double              
b         1x1                 8  double              
c         1x1                 8  double   
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We can change the display format of numeric variables with &lt;code&gt;format &amp;lt;display format&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Display Format&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;short&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Short fixed-point format. Displaying 4 decimal places&lt;/td&gt;
&lt;td&gt;3.1416&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;long&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;long fixed-point format. Display 15 decimal places for &lt;code&gt;double&lt;/code&gt; variables and 7 decimal places for &lt;code&gt;float&lt;/code&gt; variables.&lt;/td&gt;
&lt;td&gt;3.141592653589793&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;shortE&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Short scientific notation, displaying 4 decimal places. with scientific notation.&lt;/td&gt;
&lt;td&gt;3.1416e+00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;longE&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Long scientific notation. Displays 15 decimal places for &lt;code&gt;double&lt;/code&gt; variables and 7 decimal places for &lt;code&gt;float&lt;/code&gt; variables. with scientific notation.&lt;/td&gt;
&lt;td&gt;3.141592653589793e+00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;bank&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Bank format. Displays 2 decimal places.&lt;/td&gt;
&lt;td&gt;3.14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hex&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Hexadecimal format.&lt;/td&gt;
&lt;td&gt;400921fb54442d18&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rat&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Proportional format&lt;/td&gt;
&lt;td&gt;355/113&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-matlab&#34; data-lang=&#34;matlab&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;format&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hex&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;pi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ans =

   400921fb54442d18
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-matlab&#34; data-lang=&#34;matlab&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;format&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;rat&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;13&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;14&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ans =

     232/273  
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;command-line&#34;&gt;Command line&lt;/h2&gt;
&lt;p&gt;Use &lt;code&gt;;&lt;/code&gt; at the end of the command line to mute the outcome, otherwise the outcome of the command line will display in the command line window. To recall previous commands, press &lt;code&gt;uparrow&lt;/code&gt; key, just like shell. Some useful commands line:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;clc&lt;/code&gt;: Clear the output of the terminal&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clear&lt;/code&gt;: clears all variables in the current workspace&lt;/li&gt;
&lt;li&gt;&lt;code&gt;who&lt;/code&gt;: displays all variables in the workspace in an abbreviated format&lt;/li&gt;
&lt;li&gt;&lt;code&gt;whos&lt;/code&gt;: displays all variables in the workspace in a long format&lt;/li&gt;
&lt;li&gt;&lt;code&gt;format&lt;/code&gt;: change the format displayed&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;operators&#34;&gt;Operators&lt;/h2&gt;
&lt;p&gt;Common MATLAB operators are: &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;^&lt;/code&gt;. After a mathematical expression is computed, its value is stored in the variable &lt;code&gt;ans&lt;/code&gt;. The order of operations is left-to-right with equal priority. The order of precedence (from highest to lowest) is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Association &lt;code&gt;()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Power &lt;code&gt;^&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Multiplication and division &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Addition and subtraction &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Ex 1&lt;/strong&gt;: Compute $\cos\left( \sqrt{\frac{(1+2+3+4)^3}{6}}\right)$:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-matlab&#34; data-lang=&#34;matlab&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;sqrt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;^&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ans =

   -0.0050
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;To make the code neat, we can store the result of the operation in a variable:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-matlab&#34; data-lang=&#34;matlab&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;^&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;sqrt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ans =

   -0.0050
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;built-in-function&#34;&gt;Built-in function&lt;/h2&gt;
&lt;h3 id=&#34;arithmetic-operations&#34;&gt;Arithmetic Operations&lt;/h3&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.mathworks.com/help/matlab/arithmetic.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Add, Subtraction:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;+&lt;/code&gt;:             Add numbers, append strings&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sum&lt;/code&gt;:           Sum of array elements&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cumsum&lt;/code&gt;:        Cumulative sum&lt;/li&gt;
&lt;li&gt;&lt;code&gt;movsum&lt;/code&gt;:        Moving sum&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-&lt;/code&gt;:             Subtraction&lt;/li&gt;
&lt;li&gt;&lt;code&gt;diff&lt;/code&gt;:          Differences and approximate derivatives&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Multiplication:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.*&lt;/code&gt;:           Element-wise Multiplication&lt;/li&gt;
&lt;li&gt;&lt;code&gt;*&lt;/code&gt;:            Matrix multiplication&lt;/li&gt;
&lt;li&gt;&lt;code&gt;prod&lt;/code&gt;:         Product of array elements&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cumprod&lt;/code&gt;:      Cumulative product&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pagemtimes&lt;/code&gt;:   Page-wise matrix multiplication&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tensorprod&lt;/code&gt;:   Tensor products between two tensors&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Division:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;./&lt;/code&gt;:             Right array division&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.\ &lt;/code&gt;:            Left array division&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/&lt;/code&gt;:              Solve systems of linear equations xA = B for x&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\&lt;/code&gt;:              Solve systems of linear equations Ax = B for x&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pagemldivide&lt;/code&gt;:   Page-wise left matrix divide&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pagemrdivide&lt;/code&gt;:   Page-wise right matrix divide&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Power:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.^&lt;/code&gt;: Element-wise power&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^&lt;/code&gt;: Matrix power&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Mod:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mod&lt;/code&gt;:       Remainder after division (modulo operation)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rem&lt;/code&gt;:       Remainder after division&lt;/li&gt;
&lt;li&gt;&lt;code&gt;idivide&lt;/code&gt;:   Integer division with rounding option&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ceil&lt;/code&gt;:     Round toward positive infinity&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fix&lt;/code&gt;:       Round toward zero&lt;/li&gt;
&lt;li&gt;&lt;code&gt;floor&lt;/code&gt;:     Round toward negative infinity&lt;/li&gt;
&lt;li&gt;&lt;code&gt;round&lt;/code&gt;:     Round to nearest decimal or integer&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;trigonometry&#34;&gt;Trigonometry&lt;/h3&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.mathworks.com/help/matlab/trigonometry.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sine&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sin&lt;/code&gt;:	Sine of argument in radians&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sind&lt;/code&gt;:	Sine of argument in degrees&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sinpi&lt;/code&gt;:	Compute sin(X*pi) accurately&lt;/li&gt;
&lt;li&gt;&lt;code&gt;asin&lt;/code&gt;:	Inverse sine in radians&lt;/li&gt;
&lt;li&gt;&lt;code&gt;asind&lt;/code&gt;:	Inverse sine in degrees&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cosine&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cos&lt;/code&gt;:	Cosine of argument in radians&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cosd&lt;/code&gt;:	Cosine of argument in degrees&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cospi&lt;/code&gt;:	Compute cos(X*pi) accurately&lt;/li&gt;
&lt;li&gt;&lt;code&gt;acos&lt;/code&gt;:	Inverse cosine in radians&lt;/li&gt;
&lt;li&gt;&lt;code&gt;acosd&lt;/code&gt;:	Inverse cosine in degrees&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tangent&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tan&lt;/code&gt;:	Tangent of argument in radians&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tand&lt;/code&gt;:	Tangent of argument in degrees&lt;/li&gt;
&lt;li&gt;&lt;code&gt;atan&lt;/code&gt;:	Inverse tangent in radians&lt;/li&gt;
&lt;li&gt;&lt;code&gt;atand&lt;/code&gt;:	Inverse tangent in degrees&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Conversions&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;deg2rad&lt;/code&gt;:	Convert angle from degrees to radians&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rad2deg&lt;/code&gt;:	Convert angle from radians to degrees&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cart2pol&lt;/code&gt;:	Transform Cartesian coordinates to polar or  cylindrical&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cart2sph&lt;/code&gt;:	Transform Cartesian coordinates to spherical&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pol2cart&lt;/code&gt;:	Transform polar or cylindrical coordinates to Cartesian&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sph2cart&lt;/code&gt;:	Transform spherical coordinates to Cartesian&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;exponents-and-logarithms&#34;&gt;Exponents and Logarithms&lt;/h3&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.mathworks.com/help/matlab/exponents-and-logarithms.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;exp&lt;/code&gt;: Exponential&lt;/li&gt;
&lt;li&gt;&lt;code&gt;expm1&lt;/code&gt;: Compute exp(x)-1 accurately for small values of x&lt;/li&gt;
&lt;li&gt;&lt;code&gt;log&lt;/code&gt;: Natural logarithm&lt;/li&gt;
&lt;li&gt;&lt;code&gt;log10&lt;/code&gt;: Common logarithm (base 10)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;log1p&lt;/code&gt;: Compute log(1+x) accurately for small values of x&lt;/li&gt;
&lt;li&gt;&lt;code&gt;log2&lt;/code&gt;: Base 2 logarithm and floating-point number dissection&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nthroot&lt;/code&gt;: Real nth root of real numbers&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sqrt&lt;/code&gt;: Square root&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;complex-numbers&#34;&gt;Complex Numbers&lt;/h3&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.mathworks.com/help/matlab/complex-numbers.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;abs&lt;/code&gt;	Absolute value and complex magnitude&lt;/li&gt;
&lt;li&gt;&lt;code&gt;angle&lt;/code&gt;	Phase angle&lt;/li&gt;
&lt;li&gt;&lt;code&gt;complex&lt;/code&gt;	Create complex array&lt;/li&gt;
&lt;li&gt;&lt;code&gt;conj&lt;/code&gt;	Complex conjugate&lt;/li&gt;
&lt;li&gt;&lt;code&gt;i&lt;/code&gt;	Imaginary unit&lt;/li&gt;
&lt;li&gt;&lt;code&gt;j&lt;/code&gt;	Imaginary unit&lt;/li&gt;
&lt;li&gt;&lt;code&gt;real&lt;/code&gt;	Real part of complex number&lt;/li&gt;
&lt;li&gt;&lt;code&gt;imag&lt;/code&gt;	Imaginary part of complex number&lt;/li&gt;
&lt;li&gt;&lt;code&gt;isreal&lt;/code&gt;	Determine whether array uses complex storage&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sign&lt;/code&gt;	Sign function (signum function)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;array-operations&#34;&gt;Array Operations&lt;/h1&gt;
&lt;h2 id=&#34;create-matrix&#34;&gt;Create matrix&lt;/h2&gt;
&lt;h3 id=&#34;direct-definition&#34;&gt;Direct definition&lt;/h3&gt;
&lt;p&gt;In MATLAB, use &lt;code&gt;[]&lt;/code&gt; to enclose the contents of the matrix to be entered, use spaces &lt;code&gt; &lt;/code&gt; or commas &lt;code&gt;,&lt;/code&gt; to separate variables within rows, and use semicolon &lt;code&gt;;&lt;/code&gt; to separate each row. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-matlab&#34; data-lang=&#34;matlab&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;a =

       1              2              3       
b =

       1       
       2       
       3       
c =

       1              2              3       
       4              5              6     
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;using-the-colon-operator-to-create-a-vector&#34;&gt;Using the colon operator to create a vector&lt;/h3&gt;
&lt;p&gt;Using the colon &lt;code&gt;:&lt;/code&gt; operator: you can create a long vector with the following syntax:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;i:j&lt;/code&gt;: &lt;code&gt;[i, i+1, ..., j]&lt;/code&gt;. Note that it contains both &lt;code&gt;i&lt;/code&gt; and &lt;code&gt;j&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;i:k:j&lt;/code&gt;: &lt;code&gt;[i, i+k, i+2k, ..., i+mk]&lt;/code&gt;, where &lt;code&gt;i+mk =&amp;lt; j&lt;/code&gt; and &lt;code&gt;i+(m+1)k &amp;gt; j&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-matlab&#34; data-lang=&#34;matlab&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;z&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;a =

       1              2              3              4              5       
b =

       1              3              5       
c =

       1              2              3              4              5       
       2              5              8             11             14       
      -2             -3/2           -1             -1/2            0       
d =

    &#39;acegikmoqsuwy&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;special-matrix&#34;&gt;Special matrix&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;eye(n)&lt;/code&gt;: get an n*n unit matrix&lt;/li&gt;
&lt;li&gt;&lt;code&gt;zeros(n1, n2)&lt;/code&gt;: get an n1*n2 all-0 matrix&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ones(n1, n2)&lt;/code&gt;: get an n1*n2 all-1 matrix&lt;/li&gt;
&lt;li&gt;&lt;code&gt;diag(vector)&lt;/code&gt;: get a diagonal matrix with the contents of the vector &lt;code&gt;vector&lt;/code&gt; as the diagonal&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-matlab&#34; data-lang=&#34;matlab&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;diag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ans =

       1              0              0              0              0       
       0              3              0              0              0       
       0              0              5              0              0       
       0              0              0              7              0       
       0              0              0              0              9    
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;indexing-matrices&#34;&gt;Indexing matrices&lt;/h2&gt;
&lt;p&gt;Matrices in MATLAB are stored in &lt;strong&gt;columnar preorder&lt;/strong&gt;. The index subscript &lt;strong&gt;starts from 1&lt;/strong&gt; (instead of 0).&lt;/p&gt;
&lt;p&gt;There are two ways to index a matrix:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;by one-dimensional indexing: &lt;code&gt;A(n)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;by two-dimensional indexing: &lt;code&gt;A(r,c)&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For a general matrix, the indexing order is as follows:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/floating15/img/main/202205111447214.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;Thus &lt;code&gt;A(6)=A(3,2)=a32&lt;/code&gt;. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-matlab&#34; data-lang=&#34;matlab&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;A =

       1              2              3       
       4              5              6       
       7              8              9       
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-matlab&#34; data-lang=&#34;matlab&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ans =

       8       
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-matlab&#34; data-lang=&#34;matlab&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ans =

       8       

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The index of a matrix can use a colon &lt;code&gt;:&lt;/code&gt;, indicating that all rows or columns are selected.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-matlab&#34; data-lang=&#34;matlab&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,:)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ans =

       1              2              3    
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The index of a matrix can be one or two vectors, indicating that all rows or columns in the vector are selected. In particular:&lt;/p&gt;
&lt;p&gt;Method 1:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;A([1 3 5])&lt;/code&gt;: &lt;code&gt;[A(1) A(3) A(5)]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;A([1 2; 3 4])&lt;/code&gt;: &lt;code&gt;[A(1) A(2); A(3) A(4)]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Method 2:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;A([1,2], :)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;A([1 3], [1 2])&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/floating15/img/main/202205111503018.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-matlab&#34; data-lang=&#34;matlab&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a2&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a3&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:);&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a4&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;A =

       1              2              3       
       4              5              6       
       7              8              9       
a1 =

       1              7              5       
a2 =

       1              4       
       7              2     
a3 =

       1              2              3       
       4              5              6       
a4 =

       1              2       
       7              8     
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;operations-on-matrices&#34;&gt;Operations on matrices&lt;/h2&gt;
&lt;h3 id=&#34;operators-for-manipulating-matrices&#34;&gt;Operators for manipulating matrices&lt;/h3&gt;
&lt;p&gt;Let &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt; are matrixes, &lt;code&gt;a&lt;/code&gt; is a scalar:&lt;/p&gt;
&lt;p&gt;Each matrix element performs operations with scalar &lt;code&gt;a&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;A + a&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;A - a&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;A .* a&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;A ./ a&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;A .^ a&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Matrix and matrix corresponding position elements perform operations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;A + B&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;A - B&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;A .* B&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;A ./ B&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Matrix operations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;A * B&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;A / B&lt;/code&gt;: &lt;code&gt;A * inv(B)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;A \ B&lt;/code&gt;: &lt;code&gt;inv(A) * B&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;A ^ a&lt;/code&gt;: for example, &lt;code&gt;A^2 = A * A&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;A&#39;&lt;/code&gt;: transfer&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;functions-for-manipulating-matrices&#34;&gt;Functions for manipulating matrices&lt;/h3&gt;
&lt;p&gt;Aggregation: &lt;code&gt;dim&lt;/code&gt; represents the aggregation dimension, &lt;code&gt;dim=1&lt;/code&gt; indicates aggregate by columns, &lt;code&gt;dim=2&lt;/code&gt; means by rows. The default value of &lt;code&gt;dim&lt;/code&gt; is &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;max(A, [], dim)&lt;/code&gt;: returns the maximal element along dimension &lt;code&gt;dim&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;min(A, [], dim)&lt;/code&gt;: returns the minimal element along dimension &lt;code&gt;dim&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sum(A, dim)&lt;/code&gt;: return the sum along the dimensions &lt;code&gt;dim&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mean(A, dim)&lt;/code&gt;: return the mean along the dimensions &lt;code&gt;dim&lt;/code&gt;
​&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-matlab&#34; data-lang=&#34;matlab&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxc&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[],&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[],&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxv&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maxc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxv&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;A =

       1              9              3       
       4              6              1       
       6              7              4       
maxc =

       6              9              4       
maxr =

       9       
       6       
       7       
maxv =

       9       
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sort(A, dim, direction)&lt;/code&gt;: sorts the elements of A in &lt;code&gt;direction&lt;/code&gt; (&amp;lsquo;ascend&amp;rsquo; (default) or &amp;lsquo;descend&amp;rsquo;) order by dimension &lt;code&gt;dim&lt;/code&gt; (=1 by default).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sortrows(A, column, direction)&lt;/code&gt;:  sorts the rows of a matrix in &lt;code&gt;direction&lt;/code&gt; order based on the elements in the &lt;code&gt;column&lt;/code&gt; (=1 by default) column.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-matlab&#34; data-lang=&#34;matlab&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s2&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;descend&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s3&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sortrows&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;descend&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;A =

       1              9              3       
       4              6              1       
       6              7              4       
s1 =

       1              6              1       
       4              7              3       
       6              9              4       
s2 =

       9              3              1       
       6              4              1       
       7              6              4       
s3 =

       1              9              3       
       6              7              4       
       4              6              1     
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;​&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;size(A, dim)&lt;/code&gt;: returns the shape of matrix A in &lt;code&gt;dim&lt;/code&gt; dimension. If &lt;code&gt;dim&lt;/code&gt; is not specified, the shape of the entire matrix is returned.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;find(A, n)&lt;/code&gt;: returns the first n indices corresponding to the nonzero elements in X.&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
