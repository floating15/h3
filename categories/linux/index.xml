<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Linux on Haoming Wang</title>
        <link>https://wanghaoming177.netlify.app/categories/linux/</link>
        <description>Recent content in Linux on Haoming Wang</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Mon, 16 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://wanghaoming177.netlify.app/categories/linux/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Linux Command Line &amp; Shell Script I</title>
        <link>https://wanghaoming177.netlify.app/p/linux-command-line-shell-script-i/</link>
        <pubDate>Mon, 16 Aug 2021 00:00:00 +0000</pubDate>
        
        <guid>https://wanghaoming177.netlify.app/p/linux-command-line-shell-script-i/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;All figures in this blog are embedded by Github Image Hosting Service. These figures may not be displayed on mobile devices.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;manipulating-files-and-directories&#34;&gt;Manipulating files and directories&lt;/h1&gt;
&lt;h2 id=&#34;interface&#34;&gt;Interface&lt;/h2&gt;
&lt;p&gt;An operating system like Windows, Linux, or Mac OS is a special kind of program. It controls the computer&amp;rsquo;s processor, hard drive, and network connection, but its most important job is to run other programs.&lt;/p&gt;
&lt;p&gt;Human beings need an interface to interact with the operating system. The most common one these days is a &lt;strong&gt;graphical file explorer&lt;/strong&gt;, which translates clicks and double-clicks into commands to open files and run programs. Before computers had graphical displays, though, people typed instructions into a program called a &lt;strong&gt;command-line shell&lt;/strong&gt;. Each time a command is entered, the shell runs some other programs, prints their output in human-readable form, and then displays a prompt to signal that it&amp;rsquo;s ready to accept the next command. (Its name comes from the notion that it&amp;rsquo;s the &amp;ldquo;outer shell&amp;rdquo; of the computer.)&lt;/p&gt;
&lt;h2 id=&#34;pwd&#34;&gt;&lt;code&gt;pwd&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;The filesystem manages files and directories (or folders). Each is identified by an &lt;strong&gt;absolute path&lt;/strong&gt; that shows how to reach it from the filesystem&amp;rsquo;s &lt;strong&gt;root directory&lt;/strong&gt;: &lt;code&gt;/home/repl&lt;/code&gt; is the directory &lt;code&gt;repl&lt;/code&gt; in the directory &lt;code&gt;home&lt;/code&gt;, while &lt;code&gt;/home/repl/course.txt&lt;/code&gt; is a file &lt;code&gt;course.txt&lt;/code&gt; in that directory, and &lt;code&gt;/&lt;/code&gt; on its own is the root directory.&lt;/p&gt;
&lt;p&gt;To find out where you are in the filesystem, run the command &lt;code&gt;pwd&lt;/code&gt; (short for &amp;ldquo;&lt;strong&gt;print working directory&lt;/strong&gt;&amp;quot;). This prints the &lt;strong&gt;absolute path&lt;/strong&gt; of your current working directory, which is where the shell runs commands and looks for files by default.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;pwd&lt;/span&gt;
/home/repl
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;ls&#34;&gt;&lt;code&gt;ls&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;pwd&lt;/code&gt; tells you where you are. To find out what&amp;rsquo;s there, type &lt;code&gt;ls&lt;/code&gt; (which is short for &amp;ldquo;&lt;strong&gt;listing&lt;/strong&gt;&amp;quot;) and press the enter key. On its own, &lt;code&gt;ls&lt;/code&gt; lists the contents of your current directory. If you add the names of some files, &lt;code&gt;ls&lt;/code&gt; will list them, and if you add the names of directories, it will list their contents. For example, &lt;code&gt;ls /home/repl&lt;/code&gt; shows you what&amp;rsquo;s in your starting directory (usually called your home directory).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ ls /home/repl/seasonal/
autumn.csv  spring.csv  summer.csv  winter.csv
$
$ ls /home/repl/seasonal/autumn.csv
/home/repl/seasonal/autumn.csv
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;An &lt;strong&gt;absolute path&lt;/strong&gt; is like a latitude and longitude: it has the same value no matter where you are. A &lt;strong&gt;relative path&lt;/strong&gt;, on the other hand, specifies a location starting from where you are. The shell decides if a path is absolute or relative by looking at its first character: If it begins with &lt;code&gt;/&lt;/code&gt;, it is absolute. If it does not begin with &lt;code&gt;/&lt;/code&gt;, it is relative.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;$ ls
backup  bin  course.txt  people  seasonal
$ ls course.txt
course.txt
$ ls seasonal/summer.csv
seasonal/summer.csv
$ ls people/
agarwal.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;cd&#34;&gt;&lt;code&gt;cd&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;You can move around in the filesystem using the command &lt;code&gt;cd&lt;/code&gt; (which stands for &amp;ldquo;&lt;strong&gt;change directory&lt;/strong&gt;&amp;quot;). If you type &lt;code&gt;cd seasonal&lt;/code&gt; and then type &lt;code&gt;pwd&lt;/code&gt;, the shell will tell you that you are now in &lt;code&gt;/home/repl/seasonal&lt;/code&gt;. If you want to get back to your home directory &lt;code&gt;/home/repl&lt;/code&gt;, you can use the command &lt;code&gt;cd /home/repl&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /home/repl/seasonal/
$ &lt;span class=&#34;nb&#34;&gt;pwd&lt;/span&gt;
/home/repl/seasonal
$ ls
autumn.csv  spring.csv  summer.csv  winter.csv
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;special-path&#34;&gt;special path&lt;/h2&gt;
&lt;p&gt;The parent of a directory is the directory above it. For example, &lt;code&gt;/home&lt;/code&gt; is the parent of &lt;code&gt;/home/repl&lt;/code&gt;, and &lt;code&gt;/home/repl&lt;/code&gt; is the parent of &lt;code&gt;/home/repl/seasonal&lt;/code&gt;. You can always give the absolute path of your parent directory to commands like &lt;code&gt;cd&lt;/code&gt; and &lt;code&gt;ls&lt;/code&gt;. More often, though, you will take advantage of the fact that the special path &lt;code&gt;..&lt;/code&gt; means &amp;ldquo;&lt;strong&gt;the directory above the currently one&lt;/strong&gt;&amp;rdquo;. If you are in &lt;code&gt;/home/repl/seasonal&lt;/code&gt;, then &lt;code&gt;cd ..&lt;/code&gt; moves you up to &lt;code&gt;/home/repl&lt;/code&gt;. If you use &lt;code&gt;cd ../..&lt;/code&gt;, it puts you in the root directory &lt;code&gt;/&lt;/code&gt;, which is the very top of the filesystem.&lt;/p&gt;
&lt;p&gt;A single dot on its own, &lt;code&gt;.&lt;/code&gt;, always means &amp;ldquo;&lt;strong&gt;the current directory&lt;/strong&gt;&amp;rdquo;, so &lt;code&gt;ls .&lt;/code&gt; do the same thing with &lt;code&gt;ls&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;One final special path is &lt;code&gt;~&lt;/code&gt; (the tilde character), which means &amp;ldquo;&lt;strong&gt;your home directory&lt;/strong&gt;&amp;rdquo;, such as &lt;code&gt;/home/repl&lt;/code&gt;. No matter where you are, ls &lt;code&gt;~&lt;/code&gt; will always list the contents of your home directory, and &lt;code&gt;cd ~&lt;/code&gt; will always take you home.&lt;/p&gt;
&lt;h2 id=&#34;cp&#34;&gt;&lt;code&gt;cp&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;You will often want to copy files, move them into other directories to organize them, or rename them. One command to do this is &lt;code&gt;cp&lt;/code&gt;, which is short for &amp;ldquo;&lt;strong&gt;copy&lt;/strong&gt;&amp;rdquo;. If &lt;code&gt;original.txt&lt;/code&gt; is an existing file, then:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cp original.txt duplicate.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;creates a copy of &lt;code&gt;original.txt&lt;/code&gt; called &lt;code&gt;duplicate.txt&lt;/code&gt;. If there already was a file called &lt;code&gt;duplicate.txt&lt;/code&gt;, it is &lt;strong&gt;overwritten&lt;/strong&gt;. If the last parameter to &lt;code&gt;cp&lt;/code&gt; is an existing directory &lt;code&gt;backup&lt;/code&gt;, then a command like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cp seasonal/autumn.csv seasonal/winter.csv backup
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;copies all of the files into that directory.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ cp seasonal/summer.csv  backup/summer.bck
$ ls backup/
summer.bck
$
$ cp seasonal/spring.csv  seasonal/summer.csv backup/
$ ls backup/
spring.csv  summer.bck  summer.csv
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;mv&#34;&gt;&lt;code&gt;mv&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;While &lt;code&gt;cp&lt;/code&gt; copies a file, &lt;code&gt;mv&lt;/code&gt; moves it from one directory to another, i.e. cut. It handles its parameters the same way as &lt;code&gt;cp&lt;/code&gt;, so the command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mv autumn.csv winter.csv ..
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;moves the files &lt;code&gt;autumn.csv&lt;/code&gt; and &lt;code&gt;winter.csv&lt;/code&gt; from the current working directory up one level to its &lt;strong&gt;parent directory&lt;/strong&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ mv ./seasonal/spring.csv  ./seasonal/summer.csv  ./backup/
$
$ ls ./seasonal/
autumn.csv  winter.csv
$ ls ./backup/
spring.csv  summer.csv
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;mv&lt;/code&gt; can also be used to &lt;strong&gt;rename&lt;/strong&gt; files. If you run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mv course.txt old-course.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;then the file &lt;code&gt;course.txt&lt;/code&gt; in the current working directory is &amp;ldquo;moved&amp;rdquo; to the file &lt;code&gt;old-course.txt&lt;/code&gt;. This is different from the way file browsers work, but is often handy.&lt;/p&gt;
&lt;p&gt;One warning: just like &lt;code&gt;cp&lt;/code&gt;, &lt;code&gt;mv&lt;/code&gt; will &lt;strong&gt;overwrite&lt;/strong&gt; existing files. If, for example, you already have a file called &lt;code&gt;old-course.txt&lt;/code&gt;, then the command shown above will replace it with whatever is in &lt;code&gt;course.txt&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ./seasonal/
$ ls
autumn.csv  spring.csv  summer.csv  winter.csv
$ mv winter.csv winter.csv.bck
$ ls
autumn.csv  spring.csv  summer.csv  winter.csv.bck
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;rm&#34;&gt;&lt;code&gt;rm&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;We can copy files and move them around; to delete them, we use &lt;code&gt;rm&lt;/code&gt;, which stands for &amp;ldquo;&lt;strong&gt;remove&lt;/strong&gt;&amp;rdquo;. As with &lt;code&gt;cp&lt;/code&gt; and &lt;code&gt;mv&lt;/code&gt;, you can give &lt;code&gt;rm&lt;/code&gt; the names of as many files as you&amp;rsquo;d like, so:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;rm thesis.txt backup/thesis-2017-08.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;removes both &lt;code&gt;thesis.txt&lt;/code&gt; and &lt;code&gt;backup/thesis-2017-08.txt&lt;/code&gt;. Unlike graphical file browsers, the shell doesn&amp;rsquo;t have a trash can, so when you type the command above, your thesis is gone for good.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ./seasonal/
$ ls
autumn.csv  spring.csv  summer.csv  winter.csv
$ rm autumn.csv
$ ls
spring.csv  summer.csv  winter.csv
$ &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ..
$ rm seasonal/summer.csv
$ ls ./seasonal/
spring.csv  winter.csv
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;mv&lt;/code&gt; treats directories the same way it treats files: if you are in your home directory and run &lt;code&gt;mv seasonal by-season&lt;/code&gt;, for example, &lt;code&gt;mv&lt;/code&gt; changes the name of the &lt;code&gt;seasonal&lt;/code&gt; directory to &lt;code&gt;by-season&lt;/code&gt;. However, &lt;code&gt;rm&lt;/code&gt; works differently.&lt;/p&gt;
&lt;p&gt;If you try to &lt;code&gt;rm&lt;/code&gt; a directory, the shell prints an error message telling you it can&amp;rsquo;t do that, primarily to stop you from accidentally deleting an entire directory full of work. Instead, you can use a separate command called &lt;code&gt;rmdir&lt;/code&gt;. For added safety, it only works when the directory is &lt;strong&gt;empty&lt;/strong&gt;, so you must delete the files in a directory before you delete the directory. Correspondingly, you can use the command &lt;code&gt;mkdir directory_name&lt;/code&gt; to create a new (empty) directory.&lt;/p&gt;
&lt;p&gt;Experienced users can use the &lt;code&gt;-r&lt;/code&gt; &lt;strong&gt;option&lt;/strong&gt; to &lt;code&gt;rm&lt;/code&gt; to get the same effect; we will discuss command options in the next chapter.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ rm ./people/agarwal.txt
$ rmdir ./people/
$
$ mkdir yearly
$ mkdir yearly/2017
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;You will often create intermediate files when analyzing data. Rather than storing them in your home directory, you can put them in &lt;code&gt;/tmp&lt;/code&gt;, which is where people and programs often keep files they only need briefly. (Note that &lt;code&gt;/tmp&lt;/code&gt; is immediately below the root directory &lt;code&gt;/&lt;/code&gt;.)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /tmp
$ ls
tmp4k14q4ue  tmp81oflvp9  tmpkihr78do  tmpkoqewt2k
$ mkdir scratch
$ ls
scratch  tmp4k14q4ue  tmp81oflvp9  tmpkihr78do  tmpkoqewt2k
$ mv ~/people/agarwal.txt  /tmp/scratch/
$ ls scratch/
agarwal.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h1 id=&#34;manipulating-data&#34;&gt;Manipulating data&lt;/h1&gt;
</description>
        </item>
        
    </channel>
</rss>
