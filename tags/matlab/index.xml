<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>MATLAB on Haoming Wang</title>
        <link>https://wanghaoming177.netlify.app/tags/matlab/</link>
        <description>Recent content in MATLAB on Haoming Wang</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Wed, 12 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://wanghaoming177.netlify.app/tags/matlab/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>MATLAB in Engineering I (Array Operations)</title>
        <link>https://wanghaoming177.netlify.app/p/matlab-in-engineering-i-array-operations/</link>
        <pubDate>Wed, 12 May 2021 00:00:00 +0000</pubDate>
        
        <guid>https://wanghaoming177.netlify.app/p/matlab-in-engineering-i-array-operations/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;All figures in this blog are embedded by Github Image Hosting Service. These figures may not be displayed on mobile devices.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;
&lt;h2 id=&#34;operation-interface&#34;&gt;Operation interface&lt;/h2&gt;
&lt;p&gt;The operator interface of MATLAB consists of the following parts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Current folder&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Command line window&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Workspace&lt;/code&gt;: storing variables&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Command history&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/floating15/img/main/202205101713260.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;variable&#34;&gt;Variable&lt;/h2&gt;
&lt;h3 id=&#34;variable-name&#34;&gt;Variable name&lt;/h3&gt;
&lt;p&gt;Variables in MATLAB do not need to be declared, they are assigned directly using &lt;code&gt;=&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-matlab&#34; data-lang=&#34;matlab&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;b =

    10
a =

     5
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Like most programming languages, variable names in MATLAB are case-sensitive. Variable names can only be composed of &lt;code&gt;0~9&lt;/code&gt;, &lt;code&gt;a~z&lt;/code&gt;, &lt;code&gt;A~z&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt;, and variable names cannot start with a number. Some variables in MATLAB have specific meaning and are not suitable to be used as variable names.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ans&lt;/code&gt;:   outcome of the last command&lt;/li&gt;
&lt;li&gt;&lt;code&gt;i&lt;/code&gt;, &lt;code&gt;j&lt;/code&gt;:   complex number&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Inf&lt;/code&gt;:   ∞&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eps&lt;/code&gt;:   2.2204e-16&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NaN&lt;/code&gt;:   not a number&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pi&lt;/code&gt;:    π&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In addition, the &lt;code&gt;iskeyword&lt;/code&gt; command allows you to view all keywords in the MATLAB language, which are also not allowed to be used as variable names. In MATLAB, the calling priority of variables is higher than that of functions, so variable names should not override built-in functions.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/floating15/img/main/202205101738455.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-matlab&#34; data-lang=&#34;matlab&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;This string.&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c&#34;&gt;% Index the string and get &amp;#39;r&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ans =

    &#39;r&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If a function is overridden by a variable name, call &lt;code&gt;clear &amp;lt;variable name&amp;gt;&lt;/code&gt; to unbind the variable name to that function name.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-matlab&#34; data-lang=&#34;matlab&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;clear&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cos&lt;/span&gt; &lt;span class=&#34;c&#34;&gt;% clear the variables bound to cos&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;    &lt;span class=&#34;c&#34;&gt;% call the built-in cosine function to get -0.1455&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ans =

   -0.1455
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;clear&lt;/code&gt; is a dangerous command, because it clears all variables in the current workspace if it is not followed by an argument.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;type-and-format&#34;&gt;type and format&lt;/h3&gt;
&lt;p&gt;The types of variables in MATLAB are: &lt;code&gt;logical&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;, &lt;code&gt;numeric&lt;/code&gt;, &lt;code&gt;cell&lt;/code&gt;, &lt;code&gt;struct&lt;/code&gt; and arrays or matrices composed of them.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/floating15/img/main/202205101741822.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;The numeric variables we define directly are stored as &lt;code&gt;double&lt;/code&gt; by default. We can check out the type of variable by &lt;code&gt;whos&lt;/code&gt; command.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-matlab&#34; data-lang=&#34;matlab&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;1.1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;pi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;whos&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Name      Size            Bytes  Class     Attributes

a         1x1                 8  double              
ans       1x1                 8  double              
b         1x1                 8  double              
c         1x1                 8  double   
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我们可以通过 &lt;code&gt;format &amp;lt;显示格式&amp;gt;&lt;/code&gt; 改变数字型变量的显示格式.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Display Format&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;short&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Short fixed-point format. Displaying 4 decimal places&lt;/td&gt;
&lt;td&gt;3.1416&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;long&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;long fixed-point format. Display 15 decimal places for &lt;code&gt;double&lt;/code&gt; variables and 7 decimal places for &lt;code&gt;float&lt;/code&gt; variables.&lt;/td&gt;
&lt;td&gt;3.141592653589793&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;shortE&#39;&lt;/td&gt;
&lt;td&gt;Short scientific notation, displaying 4 decimal places. with scientific notation.&lt;/td&gt;
&lt;td&gt;3.1416e+00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;longE&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Long scientific notation. Displays 15 decimal places for &lt;code&gt;double&lt;/code&gt; variables and 7 decimal places for &lt;code&gt;float&lt;/code&gt; variables. with scientific notation.&lt;/td&gt;
&lt;td&gt;3.141592653589793e+00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;bank&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Bank format. Displays 2 decimal places.&lt;/td&gt;
&lt;td&gt;3.14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hex&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Hexadecimal format.&lt;/td&gt;
&lt;td&gt;400921fb54442d18&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rat&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Proportional format&lt;/td&gt;
&lt;td&gt;355/113&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;command-line&#34;&gt;Command line&lt;/h2&gt;
&lt;p&gt;Use &lt;code&gt;;&lt;/code&gt; at the end of the command line to mute the outcome, otherwise the outcome of the command line will display in the command line window. Some useful commands line:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;clc&lt;/code&gt;: Clear the output of the terminal&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clear&lt;/code&gt;: clears all variables in the current workspace&lt;/li&gt;
&lt;li&gt;&lt;code&gt;who&lt;/code&gt;: displays all variables in the workspace in an abbreviated format&lt;/li&gt;
&lt;li&gt;&lt;code&gt;whos&lt;/code&gt;: displays all variables in the workspace in a complex format]&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;calculate-by-matlab&#34;&gt;Calculate by MATLAB&lt;/h1&gt;
&lt;h2 id=&#34;comprehension&#34;&gt;Comprehension&lt;/h2&gt;
&lt;p&gt;Common MATLAB operators are: &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;^&lt;/code&gt;. After a mathematical expression is computed, its value is stored in the variable &lt;code&gt;ans&lt;/code&gt;. The order of operations is left-to-right with equal priority. The order of precedence (from highest to lowest) is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Association &lt;code&gt;()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Power &lt;code&gt;^&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Multiplication and division &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Addition and subtraction &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Ex 1&lt;/strong&gt;: Compute $\cos\left( \sqrt{\frac{(1+2+3+4)^3}{6}}\right)$:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-matlab&#34; data-lang=&#34;matlab&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;sqrt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;^&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ans =

   -0.0050
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;To make the code neat, we can store the result of the operation in a variable:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-matlab&#34; data-lang=&#34;matlab&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;^&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;sqrt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ans =

   -0.0050
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;built-in-function&#34;&gt;Built-in function&lt;/h2&gt;
&lt;h3 id=&#34;arithmetic-operations&#34;&gt;Arithmetic Operations&lt;/h3&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.mathworks.com/help/matlab/arithmetic.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Add, Subtraction:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;+&lt;/code&gt;:             Add numbers, append strings&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sum&lt;/code&gt;:           Sum of array elements&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cumsum&lt;/code&gt;:        Cumulative sum&lt;/li&gt;
&lt;li&gt;&lt;code&gt;movsum&lt;/code&gt;:        Moving sum&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-&lt;/code&gt;:             Subtraction&lt;/li&gt;
&lt;li&gt;&lt;code&gt;diff&lt;/code&gt;:          Differences and approximate derivatives&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Multiplication:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.*&lt;/code&gt;:           Element-wise Multiplication&lt;/li&gt;
&lt;li&gt;&lt;code&gt;*&lt;/code&gt;:            Matrix multiplication&lt;/li&gt;
&lt;li&gt;&lt;code&gt;prod&lt;/code&gt;:         Product of array elements&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cumprod&lt;/code&gt;:      Cumulative product&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pagemtimes&lt;/code&gt;:   Page-wise matrix multiplication&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tensorprod&lt;/code&gt;:   Tensor products between two tensors&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Division:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;./&lt;/code&gt;:             Right array division&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.\ &lt;/code&gt;:            Left array division&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/&lt;/code&gt;:              Solve systems of linear equations xA = B for x&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\&lt;/code&gt;:              Solve systems of linear equations Ax = B for x&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pagemldivide&lt;/code&gt;:   Page-wise left matrix divide&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pagemrdivide&lt;/code&gt;:   Page-wise right matrix divide&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Power:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.^&lt;/code&gt;: Element-wise power&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^&lt;/code&gt;: Matrix power&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Mod:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mod&lt;/code&gt;:       Remainder after division (modulo operation)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rem&lt;/code&gt;:       Remainder after division&lt;/li&gt;
&lt;li&gt;&lt;code&gt;idivide&lt;/code&gt;:   Integer division with rounding option&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ceil&lt;/code&gt;:     Round toward positive infinity&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fix&lt;/code&gt;:       Round toward zero&lt;/li&gt;
&lt;li&gt;&lt;code&gt;floor&lt;/code&gt;:     Round toward negative infinity&lt;/li&gt;
&lt;li&gt;&lt;code&gt;round&lt;/code&gt;:     Round to nearest decimal or integer&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;trigonometry&#34;&gt;Trigonometry&lt;/h3&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.mathworks.com/help/matlab/trigonometry.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sine&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sin&lt;/code&gt;:	Sine of argument in radians&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sind&lt;/code&gt;:	Sine of argument in degrees&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sinpi&lt;/code&gt;:	Compute sin(X*pi) accurately&lt;/li&gt;
&lt;li&gt;&lt;code&gt;asin&lt;/code&gt;:	Inverse sine in radians&lt;/li&gt;
&lt;li&gt;&lt;code&gt;asind&lt;/code&gt;:	Inverse sine in degrees&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cosine&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cos&lt;/code&gt;:	Cosine of argument in radians&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cosd&lt;/code&gt;:	Cosine of argument in degrees&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cospi&lt;/code&gt;:	Compute cos(X*pi) accurately&lt;/li&gt;
&lt;li&gt;&lt;code&gt;acos&lt;/code&gt;:	Inverse cosine in radians&lt;/li&gt;
&lt;li&gt;&lt;code&gt;acosd&lt;/code&gt;:	Inverse cosine in degrees&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tangent&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tan&lt;/code&gt;:	Tangent of argument in radians&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tand&lt;/code&gt;:	Tangent of argument in degrees&lt;/li&gt;
&lt;li&gt;&lt;code&gt;atan&lt;/code&gt;:	Inverse tangent in radians&lt;/li&gt;
&lt;li&gt;&lt;code&gt;atand&lt;/code&gt;:	Inverse tangent in degrees&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Conversions&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;deg2rad&lt;/code&gt;:	Convert angle from degrees to radians&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rad2deg&lt;/code&gt;:	Convert angle from radians to degrees&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cart2pol&lt;/code&gt;:	Transform Cartesian coordinates to polar or  cylindrical&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cart2sph&lt;/code&gt;:	Transform Cartesian coordinates to spherical&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pol2cart&lt;/code&gt;:	Transform polar or cylindrical coordinates to Cartesian&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sph2cart&lt;/code&gt;:	Transform spherical coordinates to Cartesian&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;exponents-and-logarithms&#34;&gt;Exponents and Logarithms&lt;/h3&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.mathworks.com/help/matlab/exponents-and-logarithms.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;exp&lt;/code&gt;: Exponential&lt;/li&gt;
&lt;li&gt;&lt;code&gt;expm1&lt;/code&gt;: Compute exp(x)-1 accurately for small values of x&lt;/li&gt;
&lt;li&gt;&lt;code&gt;log&lt;/code&gt;: Natural logarithm&lt;/li&gt;
&lt;li&gt;&lt;code&gt;log10&lt;/code&gt;: Common logarithm (base 10)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;log1p&lt;/code&gt;: Compute log(1+x) accurately for small values of x&lt;/li&gt;
&lt;li&gt;&lt;code&gt;log2&lt;/code&gt;: Base 2 logarithm and floating-point number dissection&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nthroot&lt;/code&gt;: Real nth root of real numbers&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sqrt&lt;/code&gt;: Square root&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;complex-numbers&#34;&gt;Complex Numbers&lt;/h3&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.mathworks.com/help/matlab/complex-numbers.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;abs&lt;/code&gt;	Absolute value and complex magnitude&lt;/li&gt;
&lt;li&gt;&lt;code&gt;angle&lt;/code&gt;	Phase angle&lt;/li&gt;
&lt;li&gt;&lt;code&gt;complex&lt;/code&gt;	Create complex array&lt;/li&gt;
&lt;li&gt;&lt;code&gt;conj&lt;/code&gt;	Complex conjugate&lt;/li&gt;
&lt;li&gt;&lt;code&gt;i&lt;/code&gt;	Imaginary unit&lt;/li&gt;
&lt;li&gt;&lt;code&gt;j&lt;/code&gt;	Imaginary unit&lt;/li&gt;
&lt;li&gt;&lt;code&gt;real&lt;/code&gt;	Real part of complex number&lt;/li&gt;
&lt;li&gt;&lt;code&gt;imag&lt;/code&gt;	Imaginary part of complex number&lt;/li&gt;
&lt;li&gt;&lt;code&gt;isreal&lt;/code&gt;	Determine whether array uses complex storage&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sign&lt;/code&gt;	Sign function (signum function)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;array-operation&#34;&gt;Array operation&lt;/h2&gt;
</description>
        </item>
        
    </channel>
</rss>
